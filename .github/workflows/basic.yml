name: 🔍 Basic Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    outputs:
      any_modified: ${{ steps.filter.outputs.any_modified }}
    steps:
      - uses: actions/checkout@v4
      - uses: tj-actions/changed-files@v41
        id: filter
        with:
          files_ignore: |
            docs
            LICENSE
            **.md
      - name: List all changed files
        run: |
          for file in ${{ steps.filter.outputs.all_modified_files }}; do
            echo "$file was changed"
          done

  check:
    needs: [changes]
    if: needs.changes.outputs.any_modified == 'true'
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    strategy:
      matrix:
        arch: [ "x86_64", "aarch64" ]
        libc: [ "gnu", "musl" ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
      - name: Install nightly rustfmt
        run: rustup toolchain install nightly --component rustfmt --profile minimal --no-self-update
      - name: typos-action
        uses: crate-ci/typos@v1.22.9
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Install cross-rs
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: Setup target
        run: |
          echo "CARGO=cross" >> ${GITHUB_ENV}
          echo "TARGET=${{ matrix.arch }}-unknown-linux-${{ matrix.libc }}" >> ${GITHUB_ENV}
      - name: Check formatting and lints
        run: just lint
      - name: Install cargo machete
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-machete@0.7.0
      - name: Check unused deps
        run: cargo machete

  tests:
    needs: [changes]
    if: needs.changes.outputs.any_modified == 'true'
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    strategy:
      matrix:
        arch: [ "x86_64" ]
        libc: [ "gnu", "musl" ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Install cross-rs
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: Setup target
        run: |
          echo "CARGO=cross" >> ${GITHUB_ENV}
          echo "TARGET=${{ matrix.arch }}-unknown-linux-${{ matrix.libc }}" >> ${GITHUB_ENV}
      - name: Disable AppArmor restrictions
        run: echo 0 | sudo tee /proc/sys/kernel/apparmor_restrict_unprivileged_userns
      - name: Run tests
        run: just test-basic
      - name: Run feature tests
        run: just test-features

  # We do not yet enforce some minimum coverage, and there were come codecov issues
  # so commenting this out for now. When we are ready to enforce coverage, uncomment 
  # and check this works or not.
  # coverage:
  #   needs: [changes]
  #   if: needs.changes.outputs.any_modified == 'true'
  #   runs-on: ubuntu-24.04
  #   timeout-minutes: 20
  #   name: Run test coverage
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup Rust toolchain and cache
  #       uses: actions-rust-lang/setup-rust-toolchain@v1.3.7
  #     - name: Install llvm-tools-preview
  #       run: rustup component add llvm-tools-preview
  #     - name: install cargo-llvm-cov
  #       uses: taiki-e/install-action@v2
  #       with:
  #         tool: cargo-llvm-cov@0.4.0
  #     - uses: taiki-e/install-action@just
  #     - name: Install requirements
  #       run: sudo env PATH=$PATH just ci-prepare
  #     - name: Run Test Coverage for youki
  #       run: |
  #         cargo llvm-cov clean --workspace
  #         cargo llvm-cov --no-report -- --test-threads=1
  #         cargo llvm-cov --no-run --lcov --output-path ./coverage.lcov
  #     - name: Upload Youki Code Coverage Results
  #       uses: codecov/codecov-action@v4
  #       with:
  #         file: ./coverage.lcov
